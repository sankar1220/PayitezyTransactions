package com.payitezy.domain;

// Generated Apr 28, 2016 4:56:47 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

/**
 * Transaction generated by hbm2java
 */
@Entity
@Table(name = "transaction", catalog = "payitezy")
public class Transaction extends AbstractDomain implements java.io.Serializable {

    private Users users;
    private String code;
    private Double amount;
    private String paymentType;
    private String transacttionFor;
    private String transactionErrorCode;
    private String transactionMerchantErrorCode;
    private String transactionMerchantMsg;
    private Date createdDate;
    private String orderStatus;
    private String source;
    private String ur;
    private Double cashbackAmount;
    private String refundStatus;
    private Merchant merchant;

    private Set<Payment> payments = new HashSet<Payment>(0);
    private Set<RechargeTransaction> rechargeTransactions = new HashSet<RechargeTransaction>(0);

    public Transaction() {
    }

    public Transaction(final String id, final String source, final Merchant merchant, final String orderStatus, final String ur,
            final Double cashbackAmount, final String refundStatus, final Users users, final String code, final Double amount,
            final String paymentType, final String transacttionFor, final String transactionErrorCode,
            final String transactionMerchantErrorCode, final String transactionMerchantMsg, final Date createdDate) {
        this.id = id;
        this.users = users;
        this.code = code;
        this.amount = amount;
        this.paymentType = paymentType;
        this.transacttionFor = transacttionFor;
        this.transactionErrorCode = transactionErrorCode;
        this.transactionMerchantErrorCode = transactionMerchantErrorCode;
        this.transactionMerchantMsg = transactionMerchantMsg;
        this.createdDate = createdDate;
        this.merchant = merchant;
        this.orderStatus = orderStatus;
        this.cashbackAmount = cashbackAmount;
        this.refundStatus = refundStatus;
        this.ur = ur;
        this.source = source;
    }

    public Transaction(final String id, final String source, final Merchant merchant, final String orderStatus, final String ur,
            final Double cashbackAmount, final String refundStatus, final Users users, final String code, final Double amount,
            final String paymentType, final String transacttionFor, final String transactionErrorCode,
            final String transactionMerchantErrorCode, final String transactionMerchantMsg, final Date createdDate,
            final Set<Payment> payments, final Set<RechargeTransaction> rechargeTransactions) {
        this.id = id;
        this.users = users;
        this.code = code;
        this.amount = amount;
        this.paymentType = paymentType;
        this.transacttionFor = transacttionFor;
        this.transactionErrorCode = transactionErrorCode;
        this.transactionMerchantErrorCode = transactionMerchantErrorCode;
        this.transactionMerchantMsg = transactionMerchantMsg;
        this.createdDate = createdDate;
        this.payments = payments;
        this.rechargeTransactions = rechargeTransactions;
        this.merchant = merchant;
        this.orderStatus = orderStatus;
        this.cashbackAmount = cashbackAmount;
        this.refundStatus = refundStatus;
        this.ur = ur;
        this.source = source;
    }

    @Column(name = "amount", nullable = false, precision = 7)
    public Double getAmount() {
        return amount;
    }

    @Column(name = "cashback_amount", nullable = false)
    public Double getCashbackAmount() {
        return cashbackAmount;
    }

    @Column(name = "code", nullable = false, length = 45)
    public String getCode() {
        return code;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_date", nullable = false, length = 19)
    public Date getDate() {
        return createdDate;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "merchant_id", nullable = false)
    public Merchant getMerchant() {
        return merchant;
    }

    @Column(name = "order_status", nullable = false)
    public String getOrderStatus() {
        return orderStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "transaction")
    public Set<Payment> getPayments() {
        return payments;
    }

    @Column(name = "payment_type", nullable = false, length = 45)
    public String getPaymentType() {
        return paymentType;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "transaction")
    public Set<RechargeTransaction> getRechargeTransactions() {
        return rechargeTransactions;
    }

    @Column(name = "refund_status", nullable = false)
    public String getRefundStatus() {
        return refundStatus;
    }

    @Column(name = "source", nullable = false)
    public String getSource() {
        return source;
    }

    @Column(name = "transaction_error_code", nullable = false, length = 45)
    public String getTransactionErrorCode() {
        return transactionErrorCode;
    }

    @Column(name = "transaction_merchant_error_code", nullable = false, length = 45)
    public String getTransactionMerchantErrorCode() {
        return transactionMerchantErrorCode;
    }

    @Column(name = "transaction_merchant_msg", nullable = false, length = 45)
    public String getTransactionMerchantMsg() {
        return transactionMerchantMsg;
    }

    @Column(name = "transacttion_for", nullable = false, length = 45)
    public String getTransacttionFor() {
        return transacttionFor;
    }

    @Column(name = "ur", nullable = false)
    public String getUr() {
        return ur;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "users_id", nullable = false)
    public Users getUsers() {
        return users;
    }

    public void setAmount(final Double amount) {
        this.amount = amount;
    }

    public void setCashbackAmount(final Double cashbackAmount) {
        this.cashbackAmount = cashbackAmount;
    }

    public void setCode(final String code) {
        this.code = code;
    }

    public void setDate(final Date createdDate) {
        this.createdDate = createdDate;
    }

    public void setMerchant(final Merchant merchant) {
        this.merchant = merchant;
    }

    public void setOrderStatus(final String orderStatus) {
        this.orderStatus = orderStatus;
    }

    public void setPayments(final Set<Payment> payments) {
        this.payments = payments;
    }

    public void setPaymentType(final String paymentType) {
        this.paymentType = paymentType;
    }

    public void setRechargeTransactions(final Set<RechargeTransaction> rechargeTransactions) {
        this.rechargeTransactions = rechargeTransactions;
    }

    public void setRefundStatus(final String refundStatus) {
        this.refundStatus = refundStatus;
    }

    public void setSource(final String source) {
        this.source = source;
    }

    public void setTransactionErrorCode(final String transactionErrorCode) {
        this.transactionErrorCode = transactionErrorCode;
    }

    public void setTransactionMerchantErrorCode(final String transactionMerchantErrorCode) {
        this.transactionMerchantErrorCode = transactionMerchantErrorCode;
    }

    public void setTransactionMerchantMsg(final String transactionMerchantMsg) {
        this.transactionMerchantMsg = transactionMerchantMsg;
    }

    public void setTransacttionFor(final String transacttionFor) {
        this.transacttionFor = transacttionFor;
    }

    public void setUr(final String ur) {
        this.ur = ur;
    }

    public void setUsers(final Users users) {
        this.users = users;
    }

}
